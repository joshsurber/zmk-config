// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            bindings =
                <&kp>,
                <&kp>;
        };
        sh_cw: shift_caps_word {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS_WORD";
            #binding-cells = <0>;
            bindings =
                <&sk LSHFT>,
                <&caps_word>;
        };
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings =
                <&shifted>,
                <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <21 22>;
        };

        bksp {
            bindings = <&none>;
            key-positions = <7 8>;
        };

        ent {
            bindings = <&kp ENTER>;
            key-positions = <27 28>;
        };
    };

    macros {
        enter_pw: enter_pw {
            compatible = "zmk,behavior-macro";
            label = "ENTER_PW";
            #binding-cells = <0>;
            bindings = <&none &kp LS(C) &kp N0 &kp R &kp R &kp E &kp C &kp T &kp DOT &kp H &kp O &kp R &kp S &kp E &kp DOT &kp B &kp A &kp T &kp T &kp E &kp R &kp Y &kp DOT &kp S &kp T &kp A &kp P &kp L &kp E &kp RET>;
        };
        shifted: macro_shifted_kp {
            #binding-cells = <1>;
            label = "MACRO_SHIFTED_KP";
            compatible = "zmk,behavior-macro-one-param";
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>;
        };
        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            label = "AUTOSHIFT_KP";
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp F  &kp P      &kp G    &kp J           &kp L   &kp U            &kp Y          &ht LC(BSPC) BSPC
&kp A  &kp R  &kp S  &kp T      &kp D    &kp H           &kp N   &kp E            &kp I          &kp O
&kp Z  &kp X  &kp C  &kp V      &kp B    &kp K           &kp M   &ht UNDER COMMA  &ht MINUS DOT  &ht EXCL SLASH
                     &sk LCTRL  &sl 1    &mt LGUI SPACE  &sh_cw
            >;
        };

        osl {
            bindings = <
&kp ESC  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR  &ht COLON SEMI  &kp BSPC
&kp TAB  &kp     &kp LBRC  &kp LPAR  &kp LBKT     &kp RBKT   &kp RBRC  &kp RPAR  &kp             &trans
&kp      &kp     &kp       &kp       &kp          &kp        &kp       &kp       &kp             &kp RET
                           &kp       &to 2        &to 0      &kp
            >;
        };

        num {
            bindings = <
&kp ESC     &kp         &kp C_VOL_UP  &kp         &kp      &kp         &kp N7  &kp N8  &kp N9  &kp BSPC
&kp C_PLAY  &kp C_PREV  &kp C_VOL_DN  &kp C_NEXT  &kp      &kp         &kp N4  &kp N5  &kp N6  &kp N0
&kp TAB     &kp         &kp           &kp         &kp      &kp         &kp N1  &kp N2  &kp N3  &kp RET
                                      &kp         &to 1    &lt 0 LGUI  &kp
            >;
        };

        nav {
            bindings = <
&kp  &kp  &kp  &kp  &kp      &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp
&kp  &kp  &kp  &kp  &kp      &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp
&kp  &kp  &kp  &kp  &kp      &kp       &kp        &kp        &kp        &kp
               &kp  &to 1    &to 0     &kp
            >;
        };
    };
};
