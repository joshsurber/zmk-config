// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp F  &kp P      &kp G    &kp J      &kp L      &kp U      &kp Y    &kp SINGLE_QUOTE
&kp A  &kp R  &kp S  &kp T      &kp D    &kp H      &kp N      &kp E      &kp I    &kp O
&kp Z  &kp X  &kp C  &kp V      &kp B    &kp K      &kp M      &kp COMMA  &kp DOT  &kp FSLH
                     &sk LCTRL  &sl 1    &kp SPACE  &sk LSHFT
            >;
        };

        sym {
            bindings = <
&kp EXCL   &kp AT     &kp HASH   &kp DLLR      &kp LS(PRCNT)    &kp CARET  &kp AMPS   &kp ASTERISK  &kp MINUS  &kp EQUAL
&kp LALT   &kp LGUI   &kp LCTRL  &kp LSHFT     &kp PIPE         &kp SEMI   &kp ENTER  &kp TAB       &kp ESC    &kp BSPC
&kp TILDE  &kp GRAVE  &kp LBRC   &kp LS(LPAR)  &kp LBKT         &kp RBKT   &kp RPAR   &kp RBRC      &kp SEMI   &kp BSLH
                                 &trans        &to 3            &to 0      &trans
            >;
        };

        nav {
            bindings = <
&trans    &kp LBKT  &kp LBRC  &kp RBRC  &trans       &kp CARET  &kp LPAR   &kp RPAR   &kp RBKT  &kp TILDE
&kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp ASTRK  &kp MINUS  &kp EQUAL  &kp BSLH  &kp GRAVE
&trans    &trans    &trans    &trans    &trans       &kp AMPS   &kp UNDER  &kp PLUS   &kp PIPE  &trans
                              &trans    &trans       &trans     &trans
            >;
        };

        num {
            bindings = <
&sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                             &trans      &trans          &trans  &trans
            >;
        };
    };
};
